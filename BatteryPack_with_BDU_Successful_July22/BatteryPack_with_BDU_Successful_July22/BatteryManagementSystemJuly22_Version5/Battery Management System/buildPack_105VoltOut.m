import simscape.battery.builder.*

% Cell geometry (Samsung 50G)
cellgeometry = CylindricalGeometry();
cellgeometry.Radius = simscape.Value(0.01055,"m");
cellgeometry.Height = simscape.Value(0.07015,"m");

total_series_cells = 105;
modules = repmat(Module.empty(), total_series_cells, 1);

% Create 105 modules, each with 1 unique 34p cell
for i = 1:total_series_cells
    cell = Cell( ...
        Geometry = cellgeometry, ...
        Mass = simscape.Value(0.0695, "kg"), ...
        Capacity = simscape.Value(4.9, "A*hr"), ...
        Energy = simscape.Value(17.787, "W*hr") ...
    );
    cell.CellModelOptions.BlockParameters.thermal_port = "model";
    cell.CellModelOptions.BlockParameters.T_dependence = "yes";
    cell.CellModelOptions.BlockParameters.prm_dyn = "rc3";

    pa = ParallelAssembly( ...
        ModelResolution = "Lumped", ...
        NumParallelCells = 34, ...
        Cell = cell, ...
        Topology = "Hexagonal", ...
        Rows = 5, ...
        InterCellGap = simscape.Value(0.002, "m") ...
    );

    modules(i) = Module( ...
        ParallelAssembly = pa, ...
        ModelResolution = "Lumped", ...
        NumSeriesAssemblies = 1, ...
        StackingAxis = "Y", ...
        InterParallelAssemblyGap = simscape.Value(0.002, "m") ...
    );
end

% Split into desired module assemblies
modules_type1 = modules(1:24);             % Type 1: 24 modules
modules_type2_1 = modules(25:51);          % Type 2, piece 1: 27 modules
modules_type2_2 = modules(52:78);          % Type 2, piece 2: 27 modules
modules_type2_3 = modules(79:105);         % Type 2, piece 3: 27 modules

% Create module assemblies
moduleassembly_type1 = ModuleAssembly( ...
    Module = modules_type1, ...
    NumLevels = 24, ...
    StackingAxis = "X", ...
    InterModuleGap = simscape.Value(0.02, "m"), ...
    CircuitConnection = "Series");

moduleassembly_type2_1 = ModuleAssembly( ...
    Module = modules_type2_1, ...
    NumLevels = 27, ...
    StackingAxis = "X", ...
    InterModuleGap = simscape.Value(0.02, "m"), ...
    CircuitConnection = "Series");

moduleassembly_type2_2 = ModuleAssembly( ...
    Module = modules_type2_2, ...
    NumLevels = 27, ...
    StackingAxis = "X", ...
    InterModuleGap = simscape.Value(0.02, "m"), ...
    CircuitConnection = "Series");

moduleassembly_type2_3 = ModuleAssembly( ...
    Module = modules_type2_3, ...
    NumLevels = 27, ...
    StackingAxis = "X", ...
    InterModuleGap = simscape.Value(0.02, "m"), ...
    CircuitConnection = "Series");

% Combine into final pack
batterypack = Pack( ...
    ModuleAssembly = [moduleassembly_type1, moduleassembly_type2_1, moduleassembly_type2_2, moduleassembly_type2_3], ...
    StackingAxis = "Y", ...
    InterModuleAssemblyGap = simscape.Value(0.1, "m"));

% Build Simscape battery block
buildBattery(batterypack, LibraryName = "pack_105s34p_structured");

% Optional: Visualize structure
f = uifigure("Color", "white");
packchart = BatteryChart(Parent = f, Battery = batterypack, SimulationStrategyVisible = "on");
title(packchart, "105s34p Pack: 1 Type 1 + 3 Type 2 Assemblies")
